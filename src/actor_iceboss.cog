# Jones 3D Cog Script
#
# actor_IceBoss.cog
#
# [MDR]
#
# (C) 1999 LucasArts Entertainment Company LLC. All Rights Reserved
#
# ===================================================================

symbols

message		created
message		removed
message		aievent
message     damaged
message     killed
message		timer
message     pulse
message		callback
message		user0
message		user1
message		user2

# ************************ SUBROUTINES *************************
flex		ShootIceGuy								local
flex		StartRollAttack							local
flex		StopRollAttack							local
flex		MakeImpactFX							local

# ************************** TEMPLATES *************************
template	tpl_PrimaryWeapon=+iceclaw_lg			local
template	tpl_AltWeapon00=+icedart_lg				local
template	tpl_AltWeapon01=+nopainhit				local
template	tpl_IceMonster=ice_monster_wall			local

template	tpl_sparksClaw=ibossClawHit				local
template	tpl_sparks=ibossSparks					local
template	tpl_impact=ibossImpact					local
template	tpl_crash=ibossCrash					local
template	tpl_deathsparks=ibossDeath				local
template	tpl_deathcloud=ibossExpl				local
template	tpl_debris0=ibossDebris					local
template	tpl_debris1=iceshrapa_nc				local
template	tpl_debris2=iceshrapb_nc				local
template	tpl_debris3=iceshrapc_nc				local
template	tpl_debris4=ibossRocks					local

model		mdl_minion=gen_si.3do					local

sound       snd_rock=gen_fallingrock_c.wav			local

# ************************** SPECIAL FX ************************
int			n_joint00								local
int			n_joint01								local
int			n_joint02								local
int			n_joint03								local

int			n_idxShake								local
int			b_doSparks								local

# ************************** WEAPON HANDLERS *******************
vector		vec_altFireOffset						local
int			n_NumIceGuys=0							local
int			b_shootingIceGuy=0						local
thing		t_IceGuy								local

int			n_modeRoll00=123						local		# Roll sound type1
int			n_modeRoll01=124						local		# Roll sound type2
int			n_modeRollStop=125						local		# Roll sound crash
int			n_modeCrnt=0							local		# Toggle roll types
int			n_sndRolling=-1							local		# Handle to currently playing roll

int			TIMERID_CHOMP=5							local
int			TIMERID_GEOMHIT=6						local
int			b_canChomp								local
int			b_canHit								local
int			n_fireFlags								local

# ************************** MISC LOCAL VARS *******************
thing		t_boss									local
thing		t_player								local
thing		t_obj									local

int			n_eventType								local
int			n_param									local
int			n_idx									local

vector		vec_pos									local
vector		vec_dir									local
vector		vec_rot									local
sector		sec_atNewPos							local
flex		f_val									local
flex		fX										local
flex		fY										local
flex		fZ										local
flex		f_MinRollAttack							local
flex		f_MinIceGuyAttack						local
flex		f_damage								local

end


# ===================================================================
code

# ...................................................................
created:

	t_player = GetLocalPlayerThing();
	t_boss = GetSenderRef();
#	DEBUGPRINT("Created iceboss");

	f_MinRollAttack		= 0.6;
	f_MinIceGuyAttack	= 0.8;

	b_doSparks			= 1;
	b_canChomp			= 1;
	b_canHit			= 1;

	SetThingMoveSize(t_boss, 0.18);

	AISetSubMode(t_boss, 0x40000);							# Set SUBMODE_QUICKMODEFADE
	AISetSubMode(t_boss, 0x800000);							# Set SUBMODE_ALLOWSTEPTHING

	vec_altFireOffset = VectorSet(0.00, 0.20, 0.0);
	SetThingFireoffset(t_boss, vec_altFireOffset);

	SetPuppetModeFPS(t_boss, 1, 65, 15);					# Slow down 'fire1' anim
	PlayMode(t_boss, 1, 0);

	n_joint00 = GetNodeByName(t_boss, "imlhand");
	n_joint01 = GetNodeByName(t_boss, "imrhand");
	n_joint02 = GetNodeByName(t_boss, "imlfoot");
	n_joint03 = GetNodeByName(t_boss, "imrfoot");

	SetPulse(0.10);											# VFX pulse

	return;


# ...................................................................
removed:

#	DEBUGPRINT("Removing iceboss from game");
	t_boss = -1;
	SetPulse(0);

	return;


# ...................................................................
aievent:

	if ( GetSenderRef() != t_boss )
		return;

	n_eventType	= GetParam(0);
	n_param		= GetParam(2);								# Value depends on n_eventType

	if (n_eventType == 0x10000)								#---- SITHAI_EVENTPREFIRE ----
	{
		n_fireFlags = n_param;

		if ( AIGetArmedMode(t_boss) == 0 )
		{
			SetActorWeapon(t_boss, -1);							# Boss is rolling, disable firing
			return;
		}

		if ( BITTEST(n_param, 0x0010) )						#---- SITHAIUTIL_FIRE_PRIMARY ----
		{													#---- Choose to roll or not to roll
			SetThingFireoffset(t_boss, '0 0 0');

			if ( (AIGetArmedMode(t_boss) == 0) || (AIGetArmedMode(t_boss) == 2) )
				return;											# Mode failsafe

			if ( BITTEST(AIGetMode(t_boss), 0x200000) )
				return;											# No-roll failsafe for MODE_WALLCRAWL

			f_val = VectorZ( VectorSub(GetThingPos(t_boss), GetThingPos(t_player)) );
			If ( ABS(f_val) > 2 * GetThingMoveSize(t_boss) )	# Check height delta
				return;

			f_val = CheckPathToPoint(t_boss, GetThingPos(t_player), 0, 0);
			if ( f_val < f_MinRollAttack )						# Check clear path dist
				return;

			call StartRollAttack;								# Cleared for Roll attack!!
		}
		else if ( BITTEST(n_param, 0x0020) )				#---- SITHAIUTIL_FIRE_ALT ----
		{													#---- Swap in dart weapon
			SetThingFireoffset(t_boss, vec_altFireOffset);
			SetActorWeapon(t_boss, tpl_AltWeapon00);
		}
	}
	else if (n_eventType == 0x4000)							#---- SITHAI_EVENTFIRE ----
	{
		if ( BITTEST(n_param, 0x0010) )
		{
			StopThing(t_boss);
		}
	}
	else if (n_eventType == 0x20000)						#---- SITHAI_EVENTPOSTFIRE ----
	{														#---- Common shot clean up
		b_shootingIceGuy = 0;
		SetActorWeapon(t_boss, tpl_PrimaryWeapon);				# Re-enable primary weapon
	}
	else if ( n_eventType == 0x4 )							#---- SITHAI_EVENTTOUCHED ----
	{														#---- n_param == touched THING index
		# Check that TOUCHED thing in front of Boss
		vec_dir	= VectorSub(GetThingPos(n_param), GetThingPos(t_boss));
		vec_dir = VectorNorm(vec_dir);
		if ( VectorDot(vec_dir, GetThingLVec(t_boss)) < 0.5 )
		{
			ReturnEx(1);
			return;
		}

		f_damage = 0;
		if ( n_param == t_player )
		{
			# Inflict damage when in rolling attack mode
			if ( (AIGetArmedMode(t_boss) == 0) && (VectorLen(GetThingVel(t_boss)) > 0) )
			{
#				DEBUGPRINT("Inflicting roll damage on player");

				f_damage = 200;
				call StopRollAttack;								# Clear Roll attack mode
			}
			else											
			{
				# Inflict heavy damage if player really close
				f_val = VectorLen(VectorSub(GetThingPos(t_player), GetThingPos(t_boss)));
#				DEBUGFLEX(f_val, "Player touched dist");
				if ( (f_val < 0.25) && (b_canChomp == 1) && IsThingMoving(t_player) )
				{
#					DEBUGPRINT("Inflicting chomp damage on player");

					b_canChomp = 0;
					SetTimerEx(1.5, TIMERID_CHOMP, 0, 0);

					f_damage = 333;
					PlaySoundClass(t_boss, 106);					# Play 'attack' sound
				}
			}

			DamageThing(t_player, f_damage, 0x20000000, t_boss);
		}

		ReturnEx(1);
	}
	else if ( BITTEST(n_eventType, 0x100200) )				#---- EVENT_HIT(WALL|FLOOR) ----
	{														#---- Recover from rolling attack mode
		if ( (AIGetArmedMode(t_boss) == 0) && (VectorLen(GetThingVel(t_boss)) > 0) )
		{
#			DEBUGPRINT("ice_boss: Hit something... halting roll attack");

			if ( b_canHit == 1 )
			{
#				DEBUGPRINT("New hit wall stuff");
				b_canHit = 0;
				SetTimerEx(1.0, TIMERID_GEOMHIT, 0, 0);

				vec_dir = GetThingLVec(t_boss);
				vec_dir = VectorSub('0 0 0', vec_dir);
				SetThingLook(t_boss, vec_dir);
				ApplyForce(t_boss, VectorScale(vec_pos, 1000));		# Bounce the boss back a little

				call StopRollAttack;
				n_idxShake = 10;

				PlaySoundClass(t_boss, n_modeRollStop);
			}

			ReturnEx(1);
		}
	}
	else if ( BITTEST(n_eventType, 0x400) )					#---- EVENT_HITCLIFF ----
	{
		ReturnEx(1);
	}
	else if ( n_eventType == 0x800 )						#---- EVENT_GOALREACHED
	{
		if ( AIGetArmedMode(t_boss) == 0 )
		{
			call StopRollAttack;								# Ensure boss clears roll attack mode
		}
	}
	else if ( n_eventType == 0x200000 )						#---- EVENT_LANDFLOOR
	{
		n_idxShake = 10;
		call MakeImpactFX;
	}

	return;


# ...................................................................
damaged:

	n_param	= GetParam(1);
	if ( BITTEST(n_param, 0x01) )							#---- DAMAGE_IMPACT?
	{
		PlaySoundClass(t_boss, 85);								# Play ricochet sound
	}

	ReturnEx(0);

	return;


# ...................................................................
killed:

	if ( IsThingModelName(GetSenderRef(), "gen_si.3do") )		# Is this an Ice Guy?
	{
#		DEBUGPRINT("ice_boss: An ice monster minion died");
		n_NumIceGuys = n_NumIceGuys - 1;
	}

	return;


# ...................................................................
timer:

	if ( GetSenderID() == TIMERID_CHOMP )
	{
		b_canChomp = 1;
	}
	if ( GetSenderID() == TIMERID_GEOMHIT )
	{
		b_canHit = 1;
	}

	return;


# ...................................................................
pulse:

	if ( t_boss == -1 )
	{
		SetPulse(0);
		return;
	}

	if ( n_idxShake > 0 )
	{
		n_idxShake = n_idxShake - 1;

		vec_pos	= VectorSet(RandBetween(-1, 1), RandBetween(-1, 1), RandBetween(-1, 1));
		vec_dir	= VectorSet(RandBetween(-6, 6), RandBetween(-4, 4), RandBetween(-2, 2));
		SetPOVShake( VectorScale(vec_pos, 0.0005 * n_idxShake), VectorScale(vec_dir, 0.05 * n_idxShake), 5, 45);
	}

	if ( b_doSparks == 1 )
	{
		vec_pos = GetThingJointPos(t_boss, n_joint00[RandBetween(0, 3)]);
		CreateThingAtPos(tpl_sparks, FindNewSectorFromThing(t_boss, vec_pos), vec_pos, '0 0 0');
	}

	n_param = AIGetMode(t_boss);

	# WALLCRAWLING?
	if ( BITTEST(n_param, 0x200000) )
	{
		f_val = Rand();

		# Rock debris more likely if boss MOVING
		if ( (BITTEST(n_param, 0x01) && f_val <= 0.06) || (!BITTEST(n_param, 0x01) && f_val <= 0.03) )
		{
			vec_pos = GetThingJointPos(t_boss, n_joint00[RandBetween(0, 3)]);
			t_obj = CreateThingAtPos(tpl_debris4, FindNewSectorFromThing(t_boss, vec_pos), vec_pos, '0 0 0');
			if ( t_obj > -1 )
			{
				PlaySoundThing(snd_rock, t_obj, 1, 5, 25, 0x80);
			}
		}
	}

	return;


# ...................................................................
callback:

	if ( GetSenderRef() != t_boss )
		return;

    n_param  = GetParam(1);

	if ( n_param == 16 )											#--- "Play a roll sound" callback
	{
		n_sndRolling	= PlaySoundClass(t_boss, n_modeRoll00[n_modeCrnt]);
		n_modeCrnt		= 1 - n_modeCrnt;
	}

	if ( n_param == 21 )											#--- Rolling VFX
	{
		vec_pos = GetThingJointPos(t_boss, n_joint00[RandBetween(0, 3)]);
		CreateThingAtPos(tpl_debris0, FindNewSectorFromThing(t_boss, vec_pos), vec_pos, '0 0 0');
	}

	if ( n_param == 22 )											#--- Begin death VFX
	{
		b_doSparks = 0;
#		n_idxShake = 10;
		PlaySoundClass(t_boss, 98);										# Play 'death1' sound

		ThingFadeAnim(t_boss, 1.0, 0.0, 2.0, 0);

		for ( n_idx = 0; n_idx < 10; n_idx = n_idx + 1)
		{
			vec_rot = VectorSet(0, RandBetween(0, 359), 0);
			vec_pos = VectorAdd(GetThingPos(t_boss), '0 0 0.2');
			CreateThingAtPos(tpl_debris1[RandBetween(0, 2)], FindNewSectorFromThing(t_boss, vec_pos), vec_pos, vec_rot);
		}
	}

	if ( n_param == 23 )											#--- Mid death VFX
	{
#		n_idxShake = 10;
		PlaySoundClass(t_boss, 99);										# Play 'death2' sound

		vec_dir = VectorSet(RandBetween(-10, 10)/100, RandBetween(-10, 10)/100, RandBetween(5, 20)/100);
		vec_pos = VectorAdd(GetThingPos(t_boss), vec_dir);
		sec_atNewPos = FindNewSectorFromThing(t_boss, vec_pos);

		CreateThingAtPos(tpl_deathcloud, sec_atNewPos, vec_pos, '0 0 0');
		CreateThingAtPos(tpl_deathsparks, sec_atNewPos, vec_pos, '0 0 0');

		for ( n_idx = 0; n_idx < 20; n_idx = n_idx + 1)
		{
			vec_rot = VectorSet(0, RandBetween(0, 359), 0);
			vec_dir = VectorSet(RandBetween(-10, 10)/100, RandBetween(-10, 10)/100, RandBetween(5, 20)/100);
			vec_pos = VectorAdd(GetThingPos(t_boss), vec_dir);

			CreateThingAtPos(tpl_debris1[RandBetween(0, 2)], FindNewSectorFromThing(t_boss, vec_pos), vec_pos, vec_rot);
		}
	}

	if ( n_param == 24 )											#--- End death VFX
	{
#		n_idxShake = 20;
		PlaySoundClass(t_boss, 99);										# Play 'death2' sound

		vec_dir = GetThingPos(t_boss);
		fZ = VectorZ(vec_dir);
		for ( n_idx = 0; n_idx < 10; n_idx = n_idx + 1)
		{
			vec_rot = VectorSet(0, RandBetween(0, 359), 0);
			fX = VectorX(vec_dir) + (RandBetween(-10, 10)/100);
			fY = VectorY(vec_dir) + (RandBetween(-10, 10)/100);
			fZ = fZ + 0.05;
			vec_pos = VectorSet(fX, fY, fZ);
			sec_atNewPos = FindNewSectorFromThing(t_boss, vec_pos);

			CreateThingAtPos(tpl_deathsparks, sec_atNewPos, vec_pos, '0 0 0');
			CreateThingAtPos(tpl_deathcloud, sec_atNewPos, vec_pos, '0 0 0');

			CreateThingAtPos(tpl_debris1[RandBetween(0, 2)], sec_atNewPos, vec_pos, vec_rot);
			vec_rot = VectorSub('0 0 0', vec_rot);
			CreateThingAtPos(tpl_debris1[RandBetween(0, 2)], sec_atNewPos, vec_pos, vec_rot);
		}

		Sleep(0.3);
		PlaySoundClass(t_boss, 88);										# Play 'scrapeearth' sound
	}

	if ( n_param == 25 )											#--- Claw attack particle VFX
	{
		vec_rot	= GetThingLVecPYR(t_player);
		vec_rot = VectorSet(VectorX(vec_rot)+30, VectorY(vec_rot), VectorZ(vec_rot));
		CreateThingAtPos(tpl_sparksClaw, GetThingSector(t_player), GetThingPos(t_player), vec_rot);
	}

	return;


# ...................................................................
# Start a boss world shake
# ...................................................................
user0:

	n_idxShake = GetParam(0);

	return;


# ...................................................................
# Boss "in play" message
# ...................................................................
user1:

	SetPulse(0.10);													# VFX pulse

	return;


# ===================================================================
#	Subroutines
# ===================================================================

# ...................................................................
ShootIceGuy:

	t_player = GetLocalPlayerThing();
	if ( t_player == -1 ) return;

#	DEBUGPRINT("ice_boss: Firing an ice minion");

	vec_dir			= VectorSub(GetThingPos(t_player), GetThingPos(t_boss));
	vec_pos			= VectorAdd( GetThingPos(t_boss), VectorTransformToOrient(t_boss, vec_altFireOffset) );
	sec_atNewPos	= FindNewSectorFromThing(t_boss, vec_pos);
	t_IceGuy		= CreateThingAtPos(tpl_IceMonster, sec_atNewPos, vec_pos, '90 0 0');

	if ( t_IceGuy > -1 )
	{
		n_NumIceGuys = n_NumIceGuys + 1;

		CaptureThing(t_IceGuy);
		SetActorFlags(t_IceGuy, 0xC00);						# Set DEAF and BLIND

		# Randomize dir a little, just to be nice
		f_val = VectorZ(GetThingPos(t_player)) - VectorZ(GetThingPos(t_boss));
		if ( f_val > 0.0 )
		{
			vec_rot = VectorSet(RandBetween(10, 20), RandBetween(-10, 10), 0);	
		}
		else
		{
			vec_rot = VectorSet(RandBetween(-5, 5), RandBetween(-10, 10), 0);	
		}
		vec_dir = VectorRotate(vec_dir, vec_rot);

		ApplyForce(t_IceGuy, VectorScale(vec_dir, 250));	# Fire in the Hole!!
	}

	return;


# ...................................................................
StartRollAttack:

	t_player = GetLocalPlayerThing();
	if ( t_player == -1 ) return;

#	DEBUGPRINT("ice_boss: StartRollAttack");

	AIClearTraverseWpnts(t_boss);						# Clear wpnt status

	vec_dir	= VectorSub(GetThingPos(t_player), GetThingPos(t_boss));
	vec_dir = VectorScale(vec_dir, 10.0);
	vec_pos = VectorAdd(GetThingPos(t_boss), vec_dir);

	AISetLookPos(t_boss, GetThingPos(t_player));
	AISetMovePos(t_boss, vec_pos, 0);
	AISetMoveSpeed(t_boss, 1.7);
	SetThingMaxRotVel(t_boss, 360);

	ResetThing(t_boss);
	SetArmedMode(t_boss, 0);							# Set Roll mode
	PlayMode(t_boss, 1, 0);								# Play PUPPETSUBMODE_STAND
	SetActorFlags(t_boss, 0xC00);						# Set DEAF and BLIND

	return;


# ...................................................................
StopRollAttack:

#	DEBUGPRINT("ice_boss: StopRollAttack");

	ResetThing(t_boss);
	SetArmedMode(t_boss, 1);							# Clear Roll mode
	PlayMode(t_boss, 1, 0);								# Play PUPPETSUBMODE_STAND
	ClearActorFlags(t_boss, 0xC00);						# Clear DEAF and BLIND

	AISetMoveSpeed(t_boss, 1);
	SetThingMaxRotVel(t_boss, 175);

	AISetFireTarget(t_boss, t_player);					# Restart ATTACKING mode

	vec_pos	= VectorAdd( GetThingPos(t_boss), VectorTransformToOrient(t_player, '0 -0.19 -0.2') );
	CreateThingAtPos(tpl_crash, FindNewSectorFromThing(t_boss, vec_pos), vec_pos, '0 0 0');

	call MakeImpactFX;

	PlaySoundClass(t_boss, 88);											# Play 'scrapeearth' sound

	if ( n_sndRolling > -1 )
	{
		StopSound(n_sndRolling, 0.2);
		n_sndRolling = -1;
	}

	return;


# ...................................................................
user2:
	n_idxShake = 10;

MakeImpactFX:

	vec_pos = GetThingPos(t_boss);
	vec_dir = VectorSet(0, 0.1, 0);

	for (n_idx = 0; n_idx < 4; n_idx = n_idx + 1)
	{
		vec_dir	= VectorRotate(vec_dir, '0 90 0');
		vec_rot	= VectorAdd(vec_pos, vec_dir);
		CreateThingAtPos(tpl_impact, FindNewSectorFromThing(t_boss, vec_rot), vec_rot, '0 0 0');
	}

	return;


# ===================================================================
end
