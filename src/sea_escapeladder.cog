# Jones 3D Cog Script
#
# sea_escapeladder.cog
#
# [DS]
#
#
#
# (C) 1999 LucasArts Entertainment Company LLC. All Rights Reserved
#
# ========================================================================================

symbols

	message	startup
	message	activated

	thing		indyactor
	thing		campos
	thing		ladder
	thing		leverpos
	thing		lookpos
	surface	escape0
	surface	escape1

	template	pullever0=pullever				local
	template	pushlever0=pushlever				local
	thing		lever0						local
	thing		lever1						local
	int		curCam						local
	int		lowered=0						local
	int		startsnd						local
	int		moveit						local
	int		stopit						local
	int		lv_track						local
	keyframe	in_pull=in_pull_lever.key			local
	keyframe	in_push=in_push_lever.key			local
	keyframe	lever_pull=gen_lever_pull.key			local
	keyframe	lever_push=gen_lever_push.key			local
	thing		player						local
	sound		relsnd=sea_crane_start_c.wav			local
	sound		movesnd=sea_crane_move_c.wav			local
	sound		stopsnd=sea_crane_stop_c.wav			local
	sound		leverpull=nub_lever_pull_c.wav		local
	sound		leverback=nub_lever_reset_c.wav		local

	cog		hintcog


end

# ================================================================================

code

startup:

	player = GetLocalPlayerThing();
	lever0 = CreateThing(pullever0, leverpos);
	capturething(lever0);
	return;

activated:
	if((GetSenderRef() == lever0) || (GetSenderRef() == lever1))
	{
	curCam = GetCurrentCamera();
		MakeMeStop();
		DeselectWeaponWait(player);
	CopyPlayerHolsters(player, indyactor);
	StartCutscene(1);
	SetThingFlags(player, 0x80000);
	SetCameraPosInterp(2, 0); # snap to new pos
	ClearThingFlags(indyactor, 0x80000);
	SetCameraFocus(2, campos);
	SetCameraSecondaryFocus(2, indyactor);
	SetCurrentCamera(2);
	SetCameraFOV(60, 0, 0.0);
		if(lowered == 0)
		{
	SendMessageEx(hintcog, user3, 1, 0, 0, 0);   	 #param0=1; solved.
		PlayKey(lever0, lever_pull, 4, 0x12, 0);
		lv_track = PlayKey(indyactor, in_pull, 4, 0x12, 0);
		Sleep(1.2);
		PlaySoundLocal(leverpull, 1.0, 0, 0x0, 0);
		Sleep(1.3);	
		StopKey(lever0, lv_track, 0.0);
		DestroyThing(lever0);
		lever1 = CreateThing(pushlever0, leverpos);
		capturething(lever1);
		startsnd = PlaySoundThing(relsnd, ladder, 1.0, 5, 20, 0);
		SetCameraLookInterp(2, 1);
		SetCameraInterpSpeed(2, 2);
		sleep(0.1);
		SetCameraSecondaryFocus(2, lookpos);
		movetoframe(ladder, 1, 1.0);
		moveit = PlaySoundThing(movesnd, ladder, 1.0, 5, 20, 1);
		WaitforStop(ladder);
		Stopsound(moveit, 0.1);
		stopit = PlaySoundThing(stopsnd, ladder, 1.0, 5, 20, 0);
		Waitforsound(stopit);
		ClearAdjoinFlags(escape0, 2);
		ClearAdjoinFlags(escape1, 2);
		SetCameraLookInterp(2, 0);			#reset default
		SetCameraFOV(90, 0, 0);				#reset default
		SetCameraInterpSpeed(2, 1);			#reset default
		SetCurrentCamera(curCam);
		SetThingFlags(indyactor, 0x80000);
		ClearActorFlags(player, 0x200000);
		ClearThingFlags(player, 0x80000);
		EndCutscene();
		lowered=1;
		return;
		}
		if(lowered == 1)
		{
	SendMessageEx(hintcog, user3, 0, 0, 0, 0);   	 #param0=1; unsolved.
		PlayKey(lever1, lever_push, 4, 0x12, 0);
		lv_track = PlayKey(indyactor, in_push, 4, 0x12, 0);
		Sleep(1.2);
		PlaySoundLocal(leverback, 1.0, 0, 0x0, 0);
		Sleep(1.3);	
		StopKey(lever0, lv_track, 0.0);
		DestroyThing(lever1);
		lever0 = CreateThing(pullever0, leverpos);
		capturething(lever0);
		startsnd = PlaySoundThing(relsnd, ladder, 1.0, 5, 20, 0);
		SetCameraLookInterp(2, 1);
		SetCameraInterpSpeed(2, 2);
		sleep(0.1);
		SetCameraSecondaryFocus(2, lookpos);
		movetoframe(ladder, 0, 1.0);
		moveit = PlaySoundThing(movesnd, ladder, 1.0, 5, 20, 1);
		WaitforStop(ladder);
		Stopsound(moveit, 0.1);
		stopit = PlaySoundThing(stopsnd, ladder, 1.0, 5, 20, 0);
		WaitforSound(stopit);
	SetAdjoinFlags(escape0, 2);
	SetAdjoinFlags(escape1, 2);
		SetCameraLookInterp(2, 0);			#reset default
		SetCameraFOV(90, 0, 0);				#reset default
		SetCameraInterpSpeed(2, 1);			#reset default
		SetCurrentCamera(curCam);
		SetThingFlags(indyactor, 0x80000);
		ClearActorFlags(player, 0x200000);
		ClearThingFlags(player, 0x80000);
		EndCutscene();
		lowered=0;
		return;
		}
	}
	return;

end

